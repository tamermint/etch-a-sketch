:root {
    --grid-size: 20;
}

body, html, h1, #option-area-text, #rainbow-text, #grey-text, #slider-text, a.contact {
    font-family: 'Post No Bills Jaffna SemiBold', 'Kaushan Script', sans-serif;
    background-color: #F2EBAF;
}


*,
*::before
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    scroll-behavior: smooth;
}

body {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

.header-text {
    font-size: 1.5rem;
}

/*To ensure that grid has equally spaced rows and columns, I used
calc and repeat. var(--grid-size) sets the size of the grid and 
calc() is used to calculate the columns and rows based on the grid container 
height and width*/

#grid-container {
    display: grid;
    grid-template-columns: repeat(var(--grid-size), calc(40rem / var(--grid-size)));
    grid-auto-rows: calc(40rem / var(--grid-size));
    border: 1px solid black;
    width: 95%;
    max-width: 40rem;
    height: 40rem;
    background-color: white;
    overflow: hidden;
}

.one {
    background-color: white;
    box-shadow: 0 0 0.1px 0.1px black;
}

/*The only problem with the below - which I wasn't able to solve is
when the slider is moved, other child elements seem to jitter - I think it is because
of a combination of input type and browser rendering properties. I have noticed that
other students have got around this by using display:flex and flex-direction:column*/

.option-area {
    display: flex;
    width: max(90%, 95rem); /*This line ensures that the contents don't squish when window is minimized*/
    height: 7rem;
    background: linear-gradient(180deg, rgba(34,193,195,0.5) 0%, rgba(255,222,150,1) 50%);
    margin-top: 2rem;
    margin-bottom: 2rem;
    justify-content: center;
    align-items: center;
    font-size: 1.5rem;
    border-radius: 1000px;
    box-shadow: -5px 10px 5px 5px rgba(253,187,45,0.5);
    gap: 5rem;
}

#fill-color {
    display: flex;
    position: relative;
    gap: 1rem;
    padding: 2rem;
    background-color: transparent;
}

#color-box {
    margin-top: 5px;
    background-color: transparent;
    width: 100px;
    height: 50px;
    cursor: pointer;
    border: none;
    transition: all 0.2s ease-in-out;
  }

  /*The color box generates a palette on the top left corner of the screen
  tried using jQuery and pickr library but it ended up being
  more complicated - so I am sticking to this. At this point of my journey
  I wish to keep this project so that I can look back */

  .custom-color-box {
    margin-top: 5px;
    width: 100px;
    height: 50px;
    cursor: pointer;
    border-radius: 20px;
    background-color: #000;
    transition: all 0.2s ease-in-out;
  }  

.custom-color-box:hover {
    transform: scale(1.1);
}

.custom-color-box:active {
    transform: scale(0.9);
}

#option-area-text {
    margin-top: 10px;
    background-color: transparent;
    text-shadow: 2px 2px 4px black;
}

#rainbow {
    display: flex;
    position: relative;
    gap: 1.5rem;
    background: transparent;
}

.rainbow-btn {
    background: linear-gradient(to right, red, orange, yellow, green, blue, indigo, violet);
    color: transparent;
    border: none;
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}

.rainbow-btn:hover {
    transform: scale(1.1);
}

.rainbow-btn:active {
    transform: scale(0.9);
}

#rainbow-text {
    background: transparent;
    margin-top: 7px;
    text-shadow: 2px 2px 4px black;
}

#incremental-grey {
    display: flex;
    position: relative;
    padding: 1rem;
    background: transparent;
    gap: 1.5rem;
}
  
.grey-inc {
    background: linear-gradient(180deg, rgba(193,188,183,1) 50%, rgba(158,153,148,0.6) 80%);
    padding: 10px 20px;
    border: none;
    align-self: center;
    font-size: 16px;
    color: transparent;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}

.grey-inc:hover {
    transform: scale(1.1);
}

.grey-inc:active {
    transform: scale(0.9);
}

#grey-text {
    background: transparent;
    margin-top: 6px;
    text-shadow: 2px 2px 4px black;
}

#grid-changer {
    display: flex;
    background: transparent;
    gap: 1rem;
    padding: 10px;
}

.slider {
    -webkit-appearance: none;
    position: relative;
    padding-left: 20px;
    overflow: hidden;
    opacity: 0.7;
    transition: opacity .2s;
    border-radius: 50%;
    outline: none;
    cursor: pointer;
    background-color: transparent;
    transition: all 0.2s ease-in-out;
}

.slider::-webkit-slider-thumb {
    -webkit-appearance: none;
    position: relative;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    border: 2px solid #ff8a00;
    background-color: #ff8a00;
    transition: .5s ease-in-out;
    top: -5px;
}

.slider::-webkit-slider-runnable-track {
    background-color: aqua;
    position: relative;
    height: 10px;
    border-radius: 10px;
    box-shadow: inset 0px 0px 5px rgba(0,0,0,0.3);
    opacity: 0.7;
    background-image: linear-gradient(to right, #ff8a00, #e52e71);
}

.slider:hover {
    opacity: 1;
    transform: scale(1.1);
}

#slider-text {
    background-color: transparent;
    padding: 0.5rem;
    text-shadow: 2px 2px 4px black;
}

#eraser {
    display: flex;
    background: transparent;
    gap: 1.5rem;
    padding: 20px;
    
}


#eraser-btn {
    font-size: 0px;
    background: linear-gradient(90deg, #e3ffe7 0%, #d9e7ff 100%);;
    padding: 20px 40px;
    border: none;
    align-self: center;
    color: transparent;
    border-radius: 20px;
    cursor: pointer;
    transition: all 0.2s ease-in-out;
}

#eraser-btn:hover {
    transform: scale(1.1);
}

#eraser-btn:active {
    transform: scale(0.9);
}

#eraser-text {
    text-shadow: 2px 2px 4px black;
}

#footer-text {
    background-color: transparent;
    border: none;
}

.contact {
    font-size: 1.5em;
    text-decoration: none;
    text-shadow: 2px 2px 5px black;
    background-color: transparent;
    border: none;
}

.contact:visited {
    color: black;
}



  





